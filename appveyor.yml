    
# GENERAL CONFIGURATION #
#version format
version: '1.0.{build}'

#branches to build
branches:
  only:
    - master

#don't build on tags
skip_tags: true

# ENVIRONMENT CONFIGURATION #

clone_folder: c:\%PROJECT_NAME%

shallow_clone: true

clone_depth: 5   

environment:
  PROJECT_NAME: zchxMapTile
  
  VCVAR2017: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat'
  
  
  matrix:
  - id: msvc-x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    platform: x86
    compiler: msvc-15
    generator: "Visual Studio 15 2017"
    QTDIR: "C:\\Qt\\5.13.0\\msvc2017"
  - id: msvc-x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    platform: x64
    compiler: msvc-15
    generator: "Visual Studio 15 2017 Win64"
    QTDIR: "C:\\Qt\\5.13.0\\msvc2017_64"



configuration:
  - Release

install:
  - set PATH=%QTDIR%\bin;%PATH%
  - set ORIGPATH=%PATH%
  
#the build fail once the job fails
matrix:
  fast_finish: true




# BUILD CONFIGURATION #
before_build:

- ps: |
    # ...example script to set the proper flags for vcvarsall ...
    # syntax: vcvarsall.bat [architecture] [platform_type] [winsdk_version] [-vcvars_ver=vcversion]
    $Architecture = $env:PLATFORM # simplified, works for x86 and x64
    if ("$env:APPVEYOR_BUILD_WORKER_IMAGE" -eq "Visual Studio 2015") {
      $env:VCVARSALL = "`"$env:VCVAR2015`" $Architecture"
    } else {
      $env:VCVARSALL = "`"$env:VCVAR2017`" $Architecture"
    }
- call %VCVARSALL%




    - cd c:\%PROJECT_NAME%
    
    
    
    

build_script:
  - qmake zchxMapTile.pro
  

